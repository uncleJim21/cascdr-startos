id: cascdr
title: CASCDR
version: 0.0.1
release-notes: |
  * Initial release of CASCDR marketplace
license: MIT
wrapper-repo: https://github.com/uncleJim21/cascdr-startos
upstream-repo: https://github.com/uncleJim21/cascdr-startos
support-site: https://cascdr.vercel.app
marketing-site: https://cascdr.vercel.app
build: ["make"]
description:
  short: "An interface for you to sell paid lightning APIs"
  long: "An interface for setting up your paid Lightning API. This demo lets you punch in your OpenAI credentials to sell proxied ChatGPT responses for sats! It talks directly to the LND or CLN node running on your StartOS server and is accessible from any Tor-enabled Browser!"
assets:
  license: LICENSE
  icon: icon.png
  instructions: instructions.md
main:
  type: docker
  image: main
  entrypoint: docker_entrypoint.sh
  args: []
  mounts:
    main: /root
    lnd: /mnt/lnd
    c-lightning: "/mnt/c-lightning"
health-checks:
  rest:
    name: REST API Interface
    success-message: CASCDR is ready to accept requests
    type: docker
    image: main
    entrypoint: check-rest.sh
    args: []
    io-format: json
    inject: true
config:
  get:
    type: script
  set:
    type: script
properties:
  type: script
volumes:
  main:
    type: data
  compat:
    type: assets
  lnd:
    type: pointer
    package-id: lnd
    volume-id: main
    path: /public
    readonly: true
  c-lightning:
    type: pointer
    package-id: c-lightning
    volume-id: main
    path: /public
    readonly: true
interfaces:
  rest:
    name: REST
    description: The main CASCDR REST interface
    tor-config:
      port-mapping:
        80: "3003"
    lan-config:
      443:
        ssl: true
        internal: 3003
    ui: false
    protocols:
      - tcp
      - http
dependencies:
  lnd:
    version: ">=0.13.4 <0.18.0"
    description: Used to communicate with the Lightning Network.
    requirement:
      type: opt-in
      how: Can opt to use the internal Core Lightning (CLN) instance instead of LND
    config: ~
backup:
  create:
    type: script
  restore:
    type: script
migrations:
  from:
    "*":
      type: script
      args: ["from"]
  to:
    "*":
      type: script
      args: ["to"]
